{"version":3,"sources":["components/LinksComponent.js","components/CheckboxComponent.js","config.js","store.js","App.js","index.js"],"names":["LinksComponent","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","colors","links","map","Math","floor","random","_this2","linkElements","link","ind","color","react_default","a","createElement","react_transition_group","in","Boolean","href","length","key","id","timeout","classNames","appear","status","className","concat","style","background","React","Component","CheckboxComponent","checkboxId","type","name","onChange","e","htmlFor","mainItemList","Array","keys","items","toConsumableArray","linkNo","appState","selectedMap","1","2","3","parseInt","4","selected","5","filter","6","7","Store","get","set","value","itemNo","condition","showLink","isArray","difference","getLink","App","onCheckboxChange","store","target","checked","add","delete","setCheckboxState","Set","state","selectedItems","arguments","undefined","setState","checkboxComponents","components_CheckboxComponent","components_LinksComponent","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"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","file":"static/js/main.59a499ad.chunk.js","sourcesContent":["import React from 'react';\nimport { CSSTransition } from 'react-transition-group';\n\n/** \n * Component that renders the links \n * @prop links - An array of link objects with an id and href\n**/\nclass LinksComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        // Generates a random color for each item\n        this.colors = props.links.map(() => {\n            return 'rgb(' + (Math.floor(Math.random() * 256)) \n            + ',' + (Math.floor(Math.random() * 256)) \n            + ',' + (Math.floor(Math.random() * 256)) + ')';\n        });\n    }\n    render() {\n      const linkElements = this.props.links\n        .map((link, ind) => {\n            const color = this.colors[ind];\n            return (<CSSTransition\n                in={Boolean(link.href.length)}\n                key={link.id} \n                timeout={300}\n                classNames=\"display-link\" \n                appear={true}\n            >\n                {(status) => (\n                    <a \n                        href={link.href} \n                        className={`display-link ${status}`}\n                    >\n                    <span \n                        className=\"link-bg\"\n                        style={{ background: color }}\n                    ></span>\n                    <span \n                        className=\"accent\"\n                        style={{ background: color }}\n                    ></span>\n                    <span\n                        className={\"link-text\"}\n                    >Link {link.id}</span>\n                    </a>\n                )}\n            </CSSTransition>);\n        });\n      return (\n        <div className=\"links-container\">\n          {linkElements}\n        </div>\n      )\n    }\n  };\n\n  export default LinksComponent;","import React from 'react';\n\n/** \n * Component that renders a checkbox\n * @prop id - An id for the checkbox\n**/\nclass CheckboxComponent extends React.Component {\n    render() {\n        const checkboxId = `checkbox-${this.props.id}`;\n        return (\n        <div className=\"checkbox-container\">\n            <input \n            type=\"checkbox\" \n            name={checkboxId} \n            onChange={(e) => this.props.onChange(e, this.props.id)}\n            id={checkboxId}\n            className=\"checkbox-input\"\n            />\n            <label htmlFor={checkboxId}>Item {this.props.id}</label>\n        </div>\n        )\n    }\n};\n\nexport default CheckboxComponent;","const mainItemList = Array(7).keys();\nconst items = [...mainItemList].map(linkNo => linkNo + 1);\n\nexport {\n    items\n};","import { difference } from 'lodash';\nimport { items } from './config';\n\nconst appState = {};\n\n/** \n * Helper function to format a link. Runs the condition \n * for the given link id and return a formatted string.\n * @param linkNo - A string id for the link\n * @param selected - An array of currently selected ids\n**/\nconst getLink = (linkNo, selected) => {\n    const condition = selectedMap[linkNo];\n    let showLink = false;\n    if (typeof condition === \"function\") {\n        showLink = condition(selected);\n    } else if (Array.isArray(condition)) {\n        showLink = difference(condition, selected).length === 0;\n    }\n    return showLink ? '#' : '';\n};\n\n/** \n * The reference map to check the state of a link against\n * Can be either an array or a function.\n**/\n\nconst selectedMap = {\n    \"1\": [1],\n    \"2\": [3,5],\n    \"3\": items.map(linkNo => parseInt(linkNo)),\n    \"4\": (selected) => {\n        return Boolean(selected.length === 0);\n    },\n    \"5\": items.filter(linkNo => Boolean(linkNo % 2)),\n    \"6\": items.filter(linkNo => Boolean(!(linkNo % 2))),\n    \"7\": (selected) => {\n        return Boolean(selected.length);\n    }\n};\n\n/** \n * Simple store constructor\n * @prop id - An id for the checkbox\n**/\nconst Store = () => {\n    return {\n        get: (key) => {\n            if(!key) {\n                return appState;\n            }\n            return appState[key];\n        },\n        set: (key, value) => {\n            if(key === 'selectedItems') {\n                appState[key] = value;\n                appState['links'] = items\n                    .map(itemNo => {\n                        return {\n                            id: itemNo,\n                            href: getLink(itemNo, [...value]) \n                        };\n                    });\n            }\n        }\n    }\n\n};\n\nexport default Store;","import React, { Component } from 'react';\nimport LinksComponent from './components/LinksComponent';\nimport CheckboxComponent from './components/CheckboxComponent';\nimport './App.css';\nimport Store from './store';\nimport { items } from './config';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.store = new Store();\n    this.store.set('selectedItems',  new Set([]));\n    this.state = {\n      selectedItems: this.store.get('selectedItems'),\n      links: this.store.get('links')\n    };\n  }\n  componentDidMount() {\n    this.setCheckboxState();\n  }\n  setCheckboxState(selected = new Set([])) {\n    this.store.set('selectedItems', selected);\n    this.setState({\n      selectedItems: selected,\n      links: this.store.get('links')\n    });\n  }\n  onCheckboxChange = (e, itemNo) => {\n    const selected = this.store.get('selectedItems');\n    if (e.target.checked) {\n      selected.add(itemNo);\n    } else {\n      selected.delete(itemNo);\n    }\n    this.setCheckboxState(selected);\n  }\n  render() {\n    const checkboxComponents = items\n      .map(itemNo => \n        <CheckboxComponent \n          key={itemNo} \n          id={itemNo} \n          onChange={this.onCheckboxChange}\n        />\n      );\n    return (\n      <div className=\"app-container\">\n        {/* <SimpleStorage parent={this} /> */}\n        <section className=\"left checkbox-wrapper\">\n          <h2>Checklist</h2>\n          <div className=\"checkbox-inner\">\n            {checkboxComponents}\n          </div>\n        </section>\n        <section className=\"right links-wrapper\">\n          <h2>Links</h2>\n          <LinksComponent className={\"links-container\"} links={this.state.links} />\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}